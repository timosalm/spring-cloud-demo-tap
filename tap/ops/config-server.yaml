apiVersion: v1
kind: Service
metadata:
  labels:
    app: configserver
  name: configserver
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8888
  selector:
    app: configserver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: configserver-deployment
spec:
  selector:
    matchLabels:
      app: configserver
  template:
    metadata:
      labels:
        app: configserver
    spec:
      serviceAccountName: spring-cloud-kubernetes-configserver
      containers:
        - name: configserver
          image: springcloud/spring-cloud-kubernetes-configserver:2.1.4
          imagePullPolicy: IfNotPresent
          env:
            - name: SPRING_PROFILES_INCLUDE
              value: "kubernetes,git"
            - name: SPRING_CLOUD_CONFIG_SERVER_GIT_URI
              valueFrom:
                secretKeyRef:
                  name: configserver-secret
                  key: git-url
            - name: SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT_LABEL
              valueFrom:
                secretKeyRef:
                  name: configserver-secret
                  key: git-default-label
            - name:  SPRING_CLOUD_CONFIG_SERVER_GIT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: configserver-secret
                  key: username
            - name:  SPRING_CLOUD_CONFIG_SERVER_GIT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: configserver-secret
                  key: password
          readinessProbe:
            httpGet:
              port: 8888
              path: /actuator/health/readiness
          livenessProbe:
            httpGet:
              port: 8888
              path: /actuator/health/liveness
          ports:
            - containerPort: 8888
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: spring-cloud-kubernetes-configserver
  name: spring-cloud-kubernetes-configserver
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: spring-cloud-kubernetes-configserver
  name: spring-cloud-kubernetes-configserver:view
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: namespace-reader
subjects:
  - kind: ServiceAccount
    name: spring-cloud-kubernetes-configserver
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: namespace-reader
rules:
  - apiGroups: ["", "extensions", "apps"]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "list"]
---
apiVersion: v1
kind: Secret
metadata:
  name: configserver-binding-compatible
type: Opaque
stringData:
  type: config
  uri: http://configserver
---
apiVersion: services.apps.tanzu.vmware.com/v1alpha1
kind: ResourceClaim
metadata:
  name: configserver-binding-compatible
spec:
  ref:
    apiVersion: v1
    kind: Secret
    name: configserver-binding-compatible
